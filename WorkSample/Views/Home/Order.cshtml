@model WorkSample.Models.Entities

@{
    ViewBag.Title = "Order";
}

<h2>Order</h2>

<div class="content">
    <div class="float-left">
        <ul id="update-products" data-bind="foreach: orders">
            <li>
                <!-- Do these need to be $data.Product.Name()? etc...-->
                <div><div class="item">Order ID</div><span data-bind="text: $data.Id"></span></div>
                <div><div class="item">Product Name</div><span data-bind="text: $data.Product"></span></div>
                <div><div class="item">Cost ($)</div><span data-bind="text: $data.Product"></span></div>
                <div><div class="item">Product Type</div><span data-bind="text: $data.ProductType"></span></div>
                <div><div class="item">Color</div><span data-bind="text: $data.Color"></span></div>
                <div><div class="item">Size</div><span data-bind="text: $data.Size"></span></div>
                <div>
                    <input type="button" value="Update" data-bind="click: $root.update"/>
                    <input type="button" value="Remove" data-bind="click: $root.remove" />
                </div>
            </li>
        </ul>
    </div>

    <div class="float-right">
        <h2>Add New Product</h2>
        <form id="addOrder" data-bind="submit: create">
            @Html.ValidationSummary(true);
            <fieldset>
                @Html.EditorForModel();
                <p>
                    <input type="submit" value="Save" />
                </p>
            </fieldset>
        </form>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        // View-model will go here
        function OrderViewModel() {
            var self = this;
            self.orders = ko.observableArray();

            var baseUri = '@ViewBag.ApiUrl';

            self.create = function (formElement) {
                $.post(baseUri, $(formElement).serialize(), null, "json")
                    .done(function (o) {
                        self.orders.push(o);
                    });
            }

            self.update = function (order) {
                $.ajax({ type: "PUT", url: baseUri + '/' + order.Id, data: order });
            }

            self.remove = function (order) {
                // Remove from the server first
                $.ajax({ type: "DELETE", url: baseUri + '/' + order.Id })
                    .done(function () { self.orders.remove(order); });
            }

            $.getJSON(baseUri, self.orders);
        }

        $(document).ready(function () {
            ko.applyBindings(new OrderViewModel());
        });
    </script>
}