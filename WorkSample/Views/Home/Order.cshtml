@model WorkSample.Models.Entities

@{
    ViewBag.Title = "Order";
}

<h2>Order</h2>

<div class="content">
    <div class="row">
        <div class="col-md-1"><strong>Order ID</strong></div>
        <div class="col-md-3"><strong>Product Name</strong></div>
        <div class="col-md-2"><strong>Cost ($)</strong></div>
        <div class="col-md-2"><strong>Color</strong></div>
        <div class="col-md-2"><strong>Size</strong></div>
    </div>
    <div data-bind="foreach: orders">
        <div class="row">
            <div class="col-md-1">
                <!-- Do these need to be $data.Product.Name()? etc...-->
                <p data-bind="text: $data.orderId"></p>
            </div>
            <div class="col-md-3">
                <p data-bind="text: $data.product"></p>
            </div>
            <div class="col-md-2">
                <p data-bind="text: $data.cost"></p>
            </div>
            <div class="col-md-2">
                <p data-bind="text: $data.color"></p>
            </div>
            <div class="col-md-1">
                <p data-bind="text: $data.size"></p>
            </div>
            <div class="col-md-1">
                <input type="button" value="Remove" data-bind="click: $root.remove" />
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <h2>Add New Product</h2>
            <form id="addProduct" class="form-inline" role="form" data-bind="submit: createProduct">
                <div class="form-group">
                    <label class="sr-only" for="productName">Product Name</label>
                    <input type="text" class="form-control" id="productName" placeholder="Enter Product Name">
                </div>
                <div class="form-group">
                    <label>Cost $</label><input type="number" class="form-control" id="productCost" min="0.00" max="100.00" step="0.1">
                </div>
                <input type="submit" value="Add" />
            </form>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <h2>Add New Order</h2>
            <form id="addOrder" class="form-inline" role="form" data-bind="submit: createOrder">
                <select class="form-control" data-bind="options: products, optionsText: 'productName', optionsCaption: 'Product Name', value: selectedProductCost"></select>
                <label>$</label><label data-bind="text: selectedProductCost() ? selectedProductCost().productCost : '0.00'"></label>
                <select class="form-control" data-bind="options: productColors, optionsText: 'color', optionsCaption: 'Product Color', value: selectedProductColor"></select>
                <select class="form-control" data-bind="options: productSizes, optionsText: 'size', optionsCaption: 'Product Size', value: selectedProductSize"></select>
                <div class="form-group">
                    <input type="submit" value="Add" />
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        var Product = function (data) {
            this.productId = data.id;
            this.productName = ko.observable(data.name);
            this.productCost = ko.observable(data.cost);
        };

        var Color = function (data) {
            this.colorId = data.id;
            this.color = ko.observable(data.color);
        };

        var Size = function (data) {
            this.sizeId = data.id;
            this.size = ko.observable(data.size);
        };

        function OrderViewModel() {
            var self = this;
            self.orders = ko.observableArray();
            self.productColors = ko.observableArray();
            self.productTypes = ko.observableArray();
            self.productSizes = ko.observableArray();
            self.products = ko.observableArray();
            self.selectedProductCost = ko.observable("0.00");
            self.selectedProductSize = '';
            self.selectedProductColor = '';
            self.selectedProductType = '';

            var orderApi = '@ViewBag.OrderApi';
            var productApi = '@ViewBag.ProductApi';
            var colorApi = '@ViewBag.ColorApi';
            var sizeApi = '@ViewBag.SizeApi';

            self.createProduct = function (formElement) {
                console.log($(formElement));
                $(formElement).validate();
                if ($(formElement).valid()) {
                    //$.post(productApi, $(formElement).serialize(), null, "json")
                    //    .done(function (p) {
                    //        self.products.push(p);
                    //    });
                }
            }

            self.createOrder = function (formElement) {
                var orderArr = {};
                orderArr["Product_Id"] = this.selectedProductCost().productId;
                orderArr["Color_Id"] = this.selectedProductColor.colorId;
                orderArr["Size_Id"] = this.selectedProductSize.sizeId;
                var orderJson = JSON.stringify(orderArr, null, 2);
                $(formElement).validate();
                if ($(formElement).valid()) {
                    var or = {
                        "product": this.selectedProductCost().productName(),
                        "cost": this.selectedProductCost().productCost(),
                        "color": this.selectedProductColor.color(),
                        "size": this.selectedProductSize.size()
                    };
                    console.log(or);
                    $.ajax({
                        type: "POST",
                        data: orderJson,
                        url: orderApi,
                        contentType: "application/json",
                        success: function (o) {
                            or["orderId"] = o.Id;
                            self.orders.push(or);
                        }
                    });
                }

            }

            self.update = function (order) {
                $.ajax({ type: "PUT", url: orderApi + '/' + order.Id, data: order });
            }

            self.remove = function (order) {
                // Remove from the server first
                $.ajax({ type: "DELETE", url: orderApi + '/' + order.orderId })
                    .done(function () { self.orders.remove(order); });
            }

            $.getJSON(orderApi, self.orders);

            $.getJSON(productApi, function (allData) {
                var mappedProducts = $.map(allData, function (p) { return new Product(p) });
                self.products(mappedProducts);
            });
            $.getJSON(colorApi, function (allData) {
                var mappedColors = $.map(allData, function (c) { return new Color(c) });
                self.productColors(mappedColors);
            });
            $.getJSON(sizeApi, function (allData) {
                var mappedSizes = $.map(allData, function (s) { return new Size(s) });
                self.productSizes(mappedSizes);
            });
        }

        $(document).ready(function () {
            ko.applyBindings(new OrderViewModel());
        });
    </script>
}